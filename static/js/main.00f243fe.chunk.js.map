{"version":3,"sources":["components/NoteCard.jsx","components/Notes.jsx","components/Create.jsx","components/Layout.jsx","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Container","breakpointCols","default","columnClassName","map","item","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","varient","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","theme","page","background","width","padding","spacing","drawer","drawerPaper","root","active","appbar","toolbar","mixins","date","flexGrow","marginLeft","Layout","children","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","format","Date","src","faker","image","Drawer","anchor","paper","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createTheme","palette","main","secondary","deepPurple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00f243fe.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { DeleteOutlined } from '@material-ui/icons'\r\nimport { Avatar, makeStyles } from '@material-ui/core'\r\nimport { blue, green, pink, yellow } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: (note) => {\r\n            if (note.category === 'work') {\r\n                return yellow[700]\r\n            }\r\n            if (note.category === 'money') {\r\n                return green[500]\r\n            }\r\n            if (note.category === 'todos') {\r\n                return pink[500]\r\n            }\r\n            return blue[500]\r\n        }\r\n    }\r\n})\r\n\r\nexport function NoteCard({ note, handleDelete }) {\r\n\r\n    const classes = useStyles(note)\r\n    return (\r\n        <div>\r\n            <Card elevation={1} >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>{note.category[0].toUpperCase()}</Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton onClick={() => handleDelete(note.id)}>\r\n                            <DeleteOutlined />\r\n                        </IconButton>\r\n                    }\r\n                    title={note.title}\r\n                    subheader={note.category} />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                        {note.details}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div >\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport { NoteCard } from './NoteCard'\r\nimport Masonry from 'react-masonry-css'\r\n\r\n\r\nexport function Notes() {\r\n    const [notes, setNotes] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/notes')\r\n            .then(res => res.json())\r\n            .then(data => setNotes(data))\r\n    }, [])\r\n\r\n    const handleDelete = async (id) => {\r\n        await fetch('http://localhost:8000/notes/' + id,\r\n            { method: 'DELETE' }\r\n        )\r\n        const newNotes = notes.filter(note => note.id !== id)\r\n        setNotes(newNotes)\r\n    }\r\n\r\n    const breakpoints = {\r\n        default: 3,\r\n        1100: 2,\r\n        800: 1\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {notes.map(note => (\r\n                    <div item key={note.id} >\r\n                        <NoteCard note={note} handleDelete={handleDelete} />\r\n                    </div>\r\n                ))}\r\n            </Masonry>\r\n        </Container >\r\n    )\r\n}","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport { FormControlLabel, makeStyles } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: 'block',\r\n    }\r\n})\r\n\r\nexport function Create() {\r\n\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState('')\r\n    const [details, setDetails] = useState('')\r\n    const [titleError, setTitleError] = useState(false)\r\n    const [detailsError, setDetailsError] = useState(false)\r\n    const [category, setCategory] = useState('todos')\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setTitleError(false)\r\n        setDetailsError(false)\r\n\r\n        if (title === '') {\r\n            setTitleError(true)\r\n        }\r\n        if (details === '') {\r\n            setDetailsError(true)\r\n        }\r\n\r\n        if (title && details) {\r\n            fetch('http://localhost:8000/notes', {\r\n                method: 'POST',\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({ title, details, category })\r\n            }).then(() => history.push('/'))\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography\r\n\r\n                className={classes.title}\r\n                varient=\"h6\"\r\n                color=\"textSecondary\"\r\n                component=\"h2\"\r\n                gutterBottom\r\n            >\r\n                Create a New Note\r\n            </Typography>\r\n\r\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <TextField\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    className={classes.field}\r\n                    label=\"Note Title\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    required\r\n                    error={titleError} />\r\n                <TextField\r\n                    onChange={(e) => setDetails(e.target.value)}\r\n\r\n                    className={classes.field}\r\n                    label=\"Note Details\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    required\r\n                    multiline\r\n                    rows='4'\r\n                    error={detailsError} />\r\n\r\n                <FormControl className={classes.field}>\r\n                    <FormLabel>Note Category</FormLabel>\r\n                    <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                        <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\r\n                        <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\r\n                        <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\r\n                        <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n\r\n                >\r\n                    Submit</Button>\r\n\r\n            </form>\r\n\r\n        </Container >\r\n    )\r\n}","import { makeStyles } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport ToolBar from '@material-ui/core/ToolBar'\r\nimport { format } from 'date-fns'\r\nimport { Avatar } from '@material-ui/core'\r\nimport faker from 'faker'\r\n\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    return {\r\n\r\n        page: {\r\n            background: '#f9f9f9',\r\n            width: '100%',\r\n            padding: theme.spacing(3)\r\n        },\r\n        drawer: {\r\n            width: drawerWidth\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth\r\n        },\r\n        root: {\r\n            display: 'flex'\r\n        },\r\n        active: {\r\n            background: '#e0e0e0'\r\n        },\r\n        title: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        appbar: {\r\n            width: `calc(100% - ${drawerWidth}px)`\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        date: {\r\n            flexGrow: 1\r\n        },\r\n        avatar: {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n}\r\n)\r\n\r\n\r\nexport function Layout({ children }) {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const menuItems = [\r\n        {\r\n            text: \"My Notes\",\r\n            icon: <SubjectOutlined color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: \"Create Notes\",\r\n            icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n            path: '/create'\r\n        }\r\n    ]\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <AppBar className={classes.appbar} elevation={0}>\r\n                <ToolBar>\r\n                    <Typography className={classes.date}>\r\n                        Today is the  {format(new Date(), ' do  MMMM Y')}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Mario\r\n                    </Typography>\r\n                    <Avatar src={faker.image.avatar()} className={classes.avatar} />\r\n                </ToolBar>\r\n            </AppBar>\r\n\r\n            <Drawer className={classes.drawer} variant=\"permanent\" anchor=\"left\" classes={{ paper: classes.drawerPaper }}>\r\n                <div>\r\n                    <Typography variant=\"h5\" className={classes.title}>\r\n                        Note it\r\n                    </Typography>\r\n                </div>\r\n\r\n                <List>\r\n                    {menuItems.map(item => (\r\n                        <ListItem\r\n                            button\r\n                            key={item.text}\r\n                            onClick={() => history.push(item.path)}\r\n                            className={location.pathname === item.path ? classes.active : null}\r\n                        >\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <ListItemText primary={item.text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n            <div className={classes.page}>\r\n                <div className={classes.toolbar}></div>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Notes } from './components/Notes';\r\nimport { Create } from './components/Create';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport { Layout } from './components/Layout'\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#fefefe'\r\n        },\r\n        secondary: deepPurple,\r\n    },\r\n    typography: {\r\n        fontFamily: 'Quicksand',\r\n        fontWeightLight: 400,\r\n        fontWeightRegular: 400,\r\n        fontWeightMedium: 500,\r\n        fontWeightBold: 600,\r\n    }\r\n})\r\n\r\n\r\nexport function App() {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Router>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Notes} />\r\n                        <Route path=\"/create\" component={Create} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Router>\r\n        </ThemeProvider >\r\n\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from './App'\r\nimport './index.css'\r\n// All route props (match, location and history) are available to User\r\n\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}